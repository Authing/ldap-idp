{"version":3,"file":"ldap-idp.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["const ldap = require('ldapjs');\nconst fs = require('fs');\nconst MongoClient = require('mongodb').MongoClient;\nconst ldapdb = require('./ldapdb.json');\n\nconst assert = require('assert');\n\n// Connection URL\nconst url = [\n  'mongodb://',\n  ldapdb.user + ':' + ldapdb.password + '@',\n  ldapdb.ip,\n  ':',\n  ldapdb.port,\n  '/',\n  ldapdb.dbname,\n].join('');\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(_err: any, client: any) {\n  assert.equal(null, _err);\n  console.log('Connected successfully to server');\n  const db = client.db(ldapdb.dbname);\n\n  createLDAPServer(db);\n\n  // const insertDocuments = function(db, callback) {\n  //   // Get the documents collection\n  //   const collection = db.collection('documents');\n  //   // Insert some documents\n  //   collection.insertMany([\n  //     {a : 1}, {a : 2}, {a : 3}\n  //   ], function(err, result) {\n  //     assert.equal(err, null);\n  //     assert.equal(3, result.result.n);\n  //     assert.equal(3, result.ops.length);\n  //     console.log(\"Inserted 3 documents into the collection\");\n  //     callback(result);\n  //   });\n  // }\n\n  // client.close();\n});\n\nconst createLDAPServer = (db: any) => {\n  const server: any = ldap.createServer();\n\n  const findUsers: any = function(callback: any) {\n    const collection = db.collection('users');\n    collection.find({}).toArray(function(err: any, docs: any) {\n      assert.equal(err, null);\n      callback(docs);\n    });\n  };  \n\n  function authorize(req: any, _res: any, next: any) {\n    if (!req.connection.ldap.bindDN.equals('cn=root'))\n      return next(new ldap.InsufficientAccessRightsError());\n\n    return next();\n  }\n\n  function loadAuthingUsers(req: any, _res: any, next: any) {\n    findUsers((users: any) => {\n      req.users = {};\n\n      for (var i = 0; i < users.length; i++) {\n        const currentUser: any = users[i];\n        req.users[currentUser._id] = {\n          dn: `cn=${currentUser.username ||\n            currentUser.email ||\n            currentUser.phone ||\n            currentUser.unionid},uid=${\n            currentUser._id\n          }, ou=users, o=authingId, dc=authing, dc=cn`,\n          attributes: {\n            cn:\n              currentUser.username ||\n              currentUser.email ||\n              currentUser.phone ||\n              currentUser.unionid,\n            uid: currentUser._id,\n            gid: currentUser._id,\n            username: currentUser.username,\n            objectclass: 'authingUser',\n          },\n        };\n      }\n\n      return next();\n    });\n  }\n\n  const SUFFIX: string = 'o=authingId, ou=users, dc=authing, dc=cn';\n\n  /*\n    DN = uid=LDAP_BINDING_USER（邮箱或者手机号）,ou=Users,o=AUTHING_CLINET_ID,dc=authing,dc=cn\n    ldapsearch -H ldap://localhost:1389 -x -D cn=root -LLL -b \"o=authingId,ou=users,dc=authing,dc=cn\" cn=root\n  */\n\n  server.bind('cn=root', function(req: any, res: any, next: any) {\n    console.log(req.dn.rdns);\n    // if (req.dn.toString() !== 'cn=root')\n    //   return next(new ldap.InvalidCredentialsError());\n\n    res.end();\n    return next();\n  });\n\n  const pre: any = [authorize, loadAuthingUsers];\n\n  server.search(SUFFIX, pre, function(req: any, res: any, next: any) {\n    Object.keys(req.users).forEach(function(k) {\n      if (req.filter.matches(req.users[k].attributes)) res.send(req.users[k]);\n    });\n\n    res.end();\n    return next();\n  });\n\n  server.listen(1389, function() {\n    console.log('LDAP server up at: %s', server.url);\n  });\n};\n"],"names":["ldap","require","MongoClient","ldapdb","assert","url","user","password","ip","port","dbname","join","connect","_err","client","equal","console","log","db","createLDAPServer","server","createServer","findUsers","callback","collection","find","toArray","err","docs","authorize","req","_res","next","connection","bindDN","equals","InsufficientAccessRightsError","loadAuthingUsers","users","i","length","currentUser","_id","dn","username","email","phone","unionid","attributes","cn","uid","gid","objectclass","SUFFIX","bind","res","rdns","end","pre","search","Object","keys","forEach","k","filter","matches","send","listen"],"mappings":"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"}