{"version":3,"file":"ldap-idp.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["const ldap = require('ldapjs');\nconst parseDN = require('ldapjs').parseDN;\nconst fs = require('fs');\nconst MongoClient = require('mongodb').MongoClient;\nconst ObjectId = require('mongodb').ObjectId;\nconst ldapdb = require('./ldapdb.json');\n\nconst assert = require('assert');\n\nconst Authing = require('authing-js-sdk');\n\n// Connection URL\nconst url = [\n  'mongodb://',\n  ldapdb.user + ':' + ldapdb.password + '@',\n  ldapdb.ip,\n  ':',\n  ldapdb.port,\n  '/',\n  ldapdb.dbname,\n].join('');\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(_err: any, client: any) {\n  assert.equal(null, _err);\n\n  console.log('Connected successfully to server');\n\n  const db = client.db(ldapdb.dbname);\n  createLDAPServer(db);\n  // client.close();\n});\n\nconst createLDAPServer = (db: any) => {\n  const server: any = ldap.createServer();\n\n  const findUsers: any = function(opts: any) {\n    return new Promise((resolve: any, reject: any) => {\n      const collection = db.collection('users');\n      opts['isDeleted'] = false;\n      collection.find(opts).toArray(function(err: any, docs: any) {\n        if (err) reject(err);\n        resolve(docs);\n      });\n    });\n  };\n\n  const findClients: any = function(callback: any) {\n    const clients = db.collection('userclients');\n    clients\n      .find({\n        isDeleted: false,\n      })\n      .toArray(function(err: any, docs: any) {\n        assert.equal(err, null);\n        callback(docs);\n      });\n  };\n\n  const removeUser: any = function(query: any) {\n    return new Promise((_resolve: any, _reject: any) => {\n      const collection = db.collection('users');\n      query['isDeleted'] = false;\n      collection.updateOne(query, {\n        $set: {\n          isDeleted: true,\n        },\n      });\n      findUsers(query)\n        .then((users: any) => {\n          _resolve(users);\n        })\n        .catch((err: any) => {\n          _reject(err);\n        });\n    });\n  };\n\n  // const updateUser: any = function(query: any, set: any) {\n  //   return new Promise((_resolve: any, _reject: any) => {\n  //     const collection = db.collection('users');\n  //     query['isDeleted'] = false;\n  //     collection.updateOne(query, set);\n  //     findUsers(query)\n  //       .then((users: any) => {\n  //         _resolve(users);\n  //       })\n  //       .catch((err: any) => {\n  //         _reject(err);\n  //       });\n  //   });\n  // };\n\n  findClients((clients: any) => {\n    const loadCurrentClientId = (req: any, _res: any, next: any) => {\n      req.currentClientId = '';\n      const rdns: any = req.dn.rdns;\n      for (let i = 0; i < rdns.length; i++) {\n        const rdn = rdns[i];\n        for (let key in rdn.attrs) {\n          if (key === 'o') {\n            req.currentClientId = rdn.attrs.o.value;\n          }\n        }\n      }\n      return next();\n    };\n\n    for (let i = 0; i < clients.length; i++) {\n      const client = clients[i];\n\n      let bindDN: string = `ou=users,o=${client._id},dc=authing,dc=cn`;\n      const SUFFIX: string = `o=${client._id}, ou=users, dc=authing, dc=cn`;\n\n      /*\n        DN = uid=LDAP_BINDING_USER（邮箱或者手机号）,ou=Users,o=AUTHING_CLINET_ID,dc=authing,dc=cn\n        ldapsearch -H ldap://localhost:1389 -x -D \"ou=users,o=59f86b4832eb28071bdd9214,dc=authing,dc=cn\" -LLL -b \"o=59f86b4832eb28071bdd9214,ou=users,dc=authing,dc=cn\" cn=18000179176\n      */\n\n      server.bind(bindDN, function(_req: any, res: any, next: any) {\n        // if (req.dn.toString() !== 'cn=root')\n        //   return next(new ldap.InvalidCredentialsError());\n\n        res.end();\n        return next();\n      });\n\n      const authorize = (_req: any, _res: any, next: any) => {\n        if (!_req.connection.ldap.bindDN.equals(bindDN))\n          return next(new ldap.InsufficientAccessRightsError());\n        return next();\n      };\n\n      const pre: any = [authorize, loadCurrentClientId];\n\n      server.search(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapsearch -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" -LLL -b \"o=5c344f102e450b000170190a,ou=users,dc=authing,dc=cn\" cn=ldap-tester\n\n        const filterKey: any = req.filter.attribute;\n        const filterValue: any = req.filter.value;\n\n        const filterKeyMapping: any = {\n          cn: ['username', 'unionid'],\n          gid: ['_id'],\n          uid: ['_id'],\n        };\n\n        let queryOptions: any = {\n          registerInClient: ObjectId(req.currentClientId),\n        };\n\n        if (filterKeyMapping[filterKey]) {\n          const filterMapping: any = filterKeyMapping[filterKey];\n          for (let i = 0; i < filterMapping.length; i++) {\n            const key: string = filterMapping[i];\n            queryOptions[key] =\n              key === '_id' ? ObjectId(filterValue) : filterValue;\n\n            const users: object[] = await findUsers(queryOptions);\n\n            if (users && users.length > 0) {\n              const currentUser: any = users[0];\n              const cn: any = currentUser.username || currentUser.unionid;\n              const dn: string = `cn=${cn},uid=${\n                currentUser._id\n              }, ou=users, o=${req.currentClientId}, dc=authing, dc=cn`;\n              currentUser['cn'] = cn;\n              currentUser['gid'] = currentUser._id;\n              currentUser['uid'] = currentUser._id;\n\n              delete currentUser['__v'];\n              delete currentUser['isDeleted'];\n              delete currentUser['salt'];\n\n              res.send({\n                dn,\n                attributes: currentUser,\n              });\n              break;\n            }\n\n            delete queryOptions[key];\n          }\n        }\n\n        res.end();\n        return next();\n      });\n\n      server.add(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapadd -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" -f ./user.ldif\n        const cn = req.dn.rdns[0].attrs.cn;\n        if (!req.dn.rdns[0].attrs.cn)\n          return next(new ldap.ConstraintViolationError('cn required'));\n\n        const users = await findUsers({\n          registerInClient: ObjectId(req.currentClientId),\n          isDeleted: false,\n          username: cn.value,\n        });\n\n        if (users && users.length > 0) {\n          return next(new ldap.EntryAlreadyExistsError(req.dn.toString()));\n        }\n\n        try {\n          const authing = await new Authing({\n            clientId: req.currentClientId,\n            secret: '03bb8b2fca823137c7dec63fd0029fc2',\n          });\n\n          await authing.register({\n            username: cn.value,\n            nickname: cn.value,\n            unionid: `ldap|${cn.value}`,\n            registerMethod: 'sso:ldap-add',\n          });\n        } catch (error) {\n          return next(new ldap.UnavailableError(error.toString()));\n        }\n\n        res.end();\n        return next();\n      });\n\n      server.del(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapdelete -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" \"cn=ldapjs, o=5c344f102e450b000170190a, ou=users, dc=authing,dc=cn\"\n        const cn = req.dn.rdns[0].attrs.cn;\n        if (!req.dn.rdns[0].attrs.cn)\n          return next(new ldap.NoSuchObjectError(req.dn.toString()));\n\n        const users = await findUsers({\n          registerInClient: ObjectId(req.currentClientId),\n          isDeleted: false,\n          username: cn.value,\n        });\n\n        if (!users || users.length === 0) {\n          return next(new ldap.NoSuchObjectError(req.dn.toString()));\n        }\n\n        try {\n          await removeUser({\n            registerInClient: ObjectId(req.currentClientId),\n            username: cn.value,\n          });\n        } catch (error) {\n          return next(new ldap.UnavailableError(error.toString()));\n        }\n\n        res.end();\n        return next();\n      });\n\n      server.modify(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapmodify -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" -f ./modify.ldif\n        const cn: any = req.dn.rdns[0].attrs.cn;\n        if (!req.dn.rdns[0].attrs.cn)\n          return next(new ldap.NoSuchObjectError(req.dn.toString()));\n\n        if (!req.changes.length)\n          return next(new ldap.ProtocolError('changes required'));\n  \n        const users: any = await findUsers({\n          registerInClient: ObjectId(req.currentClientId),\n          isDeleted: false,\n          username: cn.value,\n        });\n\n        if (!users || users.length === 0) {\n          return next(new ldap.NoSuchObjectError(req.dn.toString()));\n        }\n\n        const user: any = users[0];\n\n        let mod: any, authing: any;\n\n        for (var i = 0; i < req.changes.length; i++) {\n          mod = req.changes[i].modification;\n          switch (req.changes[i].operation) {\n          case 'replace':\n              const typeMapping: any = {\n                userpassword: 'password',\n                mail: 'email',\n                cn: ['username'],\n              }\n\n              const notAllowedTypes = ['gid', 'uid', '_id']\n\n              if(notAllowedTypes.indexOf(mod.type) > -1) {\n                return next(new ldap.UnwillingToPerformError(`${mod.type} is not allowed to modify`)); \n              }\n\n              let fieldModified: any = mod.type;\n\n              if (typeMapping[mod.type]) {\n                fieldModified = typeMapping[mod.type];\n              }\n\n              try {\n                authing = authing || await new Authing({\n                  clientId: req.currentClientId,\n                  secret: '03bb8b2fca823137c7dec63fd0029fc2',\n                });\n\n                if (fieldModified instanceof String || typeof fieldModified === 'string') {\n                  let query: any = {\n                    _id: user._id,\n                  };\n                  const field: any = fieldModified;\n                  query[field] = mod.vals[0];\n                  await authing.update(query);\n                }else {\n                  let query: any = {\n                    _id: users[0]._id,\n                  }\n                  for (let i = 0; i < fieldModified.length; i++) {\n                    query[fieldModified[i]] = mod.vals[0];\n                  }\n                  await authing.update(query);\n                }\n      \n              } catch (error) {\n                return next(new ldap.UnavailableError(error.toString()));\n              }\n            break;\n          case 'add':\n            return next(new ldap.UnwillingToPerformError('only replace allowed'));\n          case 'delete':\n            return next(new ldap.UnwillingToPerformError('only replace allowed'));\n          }\n        }\n  \n        res.end();\n        return next();\n      });      \n    }\n\n    server.listen(1389, function() {\n      console.log('LDAP server up at: %s', server.url);\n    });\n  });\n};\n"],"names":["ldap","require","parseDN","MongoClient","ObjectId","ldapdb","assert","Authing","url","user","password","ip","port","dbname","join","connect","_err","client","equal","console","log","db","createLDAPServer","server","createServer","findUsers","opts","Promise","resolve","reject","collection","find","toArray","err","docs","findClients","callback","clients","isDeleted","removeUser","query","_resolve","_reject","updateOne","$set","then","users","catch","loadCurrentClientId","req","_res","next","currentClientId","rdns","dn","i","length","rdn","key","attrs","o","value","bindDN","_id","SUFFIX","bind","_req","res","end","authorize","connection","equals","InsufficientAccessRightsError","pre","search","filterKey","filter","attribute","filterValue","filterKeyMapping","cn","gid","uid","queryOptions","registerInClient","filterMapping","currentUser","username","unionid","send","attributes","add","ConstraintViolationError","EntryAlreadyExistsError","toString","authing","clientId","secret","register","nickname","registerMethod","error","UnavailableError","del","NoSuchObjectError","modify","changes","ProtocolError","mod","modification","operation","typeMapping","userpassword","mail","notAllowedTypes","indexOf","type","UnwillingToPerformError","fieldModified","String","field","vals","update","listen"],"mappings":"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"}