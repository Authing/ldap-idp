{"version":3,"file":"ldap-idp.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["const ldap = require('ldapjs');\nconst fs = require('fs');\nconst MongoClient = require('mongodb').MongoClient;\nconst ldapdb = require('./ldapdb.json');\n\nconst assert = require('assert');\n\n// Connection URL\nconst url = [\n  'mongodb://',\n  ldapdb.user + ':' + ldapdb.password + '@',\n  ldapdb.ip,\n  ':',\n  ldapdb.port,\n  '/',\n  ldapdb.dbname,\n].join('');\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(_err: any, client: any) {\n  assert.equal(null, _err);\n  console.log('Connected successfully to server');\n  const db = client.db(ldapdb.dbname);\n\n  createLDAPServer();\n\n  // const insertDocuments = function(db, callback) {\n  //   // Get the documents collection\n  //   const collection = db.collection('documents');\n  //   // Insert some documents\n  //   collection.insertMany([\n  //     {a : 1}, {a : 2}, {a : 3}\n  //   ], function(err, result) {\n  //     assert.equal(err, null);\n  //     assert.equal(3, result.result.n);\n  //     assert.equal(3, result.ops.length);\n  //     console.log(\"Inserted 3 documents into the collection\");\n  //     callback(result);\n  //   });\n  // }\n\n  const findDocuments = function(db: any, callback: any) {\n    const collection = db.collection('users');\n    collection.find({}).toArray(function(err: any, docs: any) {\n      assert.equal(err, null);\n      callback(docs);\n    });\n  };\n\n  findDocuments(db, (users: any) => {\n    console.log(users);\n  });\n\n  client.close();\n});\n\nconst createLDAPServer = () => {\n  const server: any = ldap.createServer();\n\n  function authorize(req: any, _res: any, next: any) {\n    if (!req.connection.ldap.bindDN.equals('cn=root'))\n      return next(new ldap.InsufficientAccessRightsError());\n  \n    return next();\n  }\n  \n  function loadPasswdFile(req: any, _res: any, next: any) {\n    fs.readFile('/etc/passwd', 'utf8', function(err: any, data: any) {\n      if (err)\n        return next(new ldap.OperationsError(err.message));\n  \n      req.users = {};\n  \n      var lines = data.split('\\n');\n      for (var i = 0; i < lines.length; i++) {\n        if (!lines[i] || /^#/.test(lines[i]))\n          continue;\n  \n        var record = lines[i].split(':');\n        if (!record || !record.length)\n          continue;\n  \n        req.users[record[0]] = {\n          dn: `cn=${record[0]},uid=${record[2]}, ou=users, o=authingId, dc=authing, dc=cn`,\n          attributes: {\n            cn: record[0],\n            uid: record[2],\n            gid: record[3],\n            description: record[4],\n            homedirectory: record[5],\n            shell: record[6] || '',\n            objectclass: 'unixUser'\n          }\n        };\n      }\n  \n      return next();\n    });\n  }\n  \n  const SUFFIX: string = 'o=authingId, ou=users, dc=authing, dc=cn';\n  \n  /*\n    DN = uid=LDAP_BINDING_USER（邮箱或者手机号）,ou=Users,o=AUTHING_CLINET_ID,dc=authing,dc=cn\n    ldapsearch -H ldap://localhost:1389 -x -D cn=root -LLL -b \"o=authingId,ou=users,dc=authing,dc=cn\" cn=root\n  */\n  \n  server.bind('cn=root', function(req: any, res: any, next: any) {\n    console.log(req.dn.rdns);\n    // if (req.dn.toString() !== 'cn=root')\n    //   return next(new ldap.InvalidCredentialsError());\n  \n    res.end();\n    return next();\n  });\n  \n  const pre: any = [authorize, loadPasswdFile];\n  \n  server.search(SUFFIX, pre, function(req: any, res: any, next: any) {\n    Object.keys(req.users).forEach(function(k) {\n      if (req.filter.matches(req.users[k].attributes))\n        res.send(req.users[k]);\n    });\n  \n    res.end();\n    return next();\n  });\n  \n  server.listen(1389, function() {\n    console.log('LDAP server up at: %s', server.url);\n  });\n}"],"names":["ldap","require","fs","MongoClient","ldapdb","assert","url","user","password","ip","port","dbname","join","connect","_err","client","equal","console","log","db","createLDAPServer","findDocuments","callback","collection","find","toArray","err","docs","users","close","server","createServer","authorize","req","_res","next","connection","bindDN","equals","InsufficientAccessRightsError","loadPasswdFile","readFile","data","OperationsError","message","lines","split","i","length","test","record","dn","attributes","cn","uid","gid","description","homedirectory","shell","objectclass","SUFFIX","bind","res","rdns","end","pre","search","Object","keys","forEach","k","filter","matches","send","listen"],"mappings":"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"}