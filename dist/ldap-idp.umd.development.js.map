{"version":3,"file":"ldap-idp.umd.development.js","sources":["../src/index.ts"],"sourcesContent":["const ldap = require('ldapjs');\nconst parseDN = require('ldapjs').parseDN;\nconst fs = require('fs');\nconst MongoClient = require('mongodb').MongoClient;\nconst ObjectId = require('mongodb').ObjectId;\nconst ldapdb = require('./ldapdb.json');\n\nconst assert = require('assert');\n\nconst Authing = require('authing-js-sdk');\n\n// Connection URL\nconst url = [\n  'mongodb://',\n  ldapdb.user + ':' + ldapdb.password + '@',\n  ldapdb.ip,\n  ':',\n  ldapdb.port,\n  '/',\n  ldapdb.dbname,\n].join('');\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(_err: any, client: any) {\n  assert.equal(null, _err);\n\n  console.log('Connected successfully to server');\n\n  const db = client.db(ldapdb.dbname);\n  createLDAPServer(db);\n  // client.close();\n});\n\nconst createLDAPServer = (db: any) => {\n  const server: any = ldap.createServer();\n\n  const findUsers: any = function(opts: any) {\n    return new Promise((resolve: any, reject: any) => {\n      const collection = db.collection('users');\n      opts['isDeleted'] = false;\n      collection.find(opts).toArray(function(err: any, docs: any) {\n        if (err) reject(err);\n        resolve(docs);\n      });\n    });\n  };\n\n  const findClients: any = function(callback: any) {\n    const clients = db.collection('userclients');\n    clients\n      .find({\n        isDeleted: false,\n      })\n      .toArray(function(err: any, docs: any) {\n        assert.equal(err, null);\n        callback(docs);\n      });\n  };\n\n  const removeUser: any = function(query: any) {\n    return new Promise((_resolve: any, _reject: any) => {\n      const collection = db.collection('users');\n      query['isDeleted'] = false;\n      collection.updateOne(query, {\n        $set: {\n          isDeleted: true,\n        },\n      });\n      findUsers(query)\n        .then((users: any) => {\n          _resolve(users);\n        })\n        .catch((err: any) => {\n          _reject(err);\n        });\n    });\n  };\n\n  // const updateUser: any = function(query: any, set: any) {\n  //   return new Promise((_resolve: any, _reject: any) => {\n  //     const collection = db.collection('users');\n  //     query['isDeleted'] = false;\n  //     collection.updateOne(query, set);\n  //     findUsers(query)\n  //       .then((users: any) => {\n  //         _resolve(users);\n  //       })\n  //       .catch((err: any) => {\n  //         _reject(err);\n  //       });\n  //   });\n  // };\n\n  findClients((clients: any) => {\n    const loadCurrentClientId = (req: any, _res: any, next: any) => {\n      req.currentClientId = '';\n      const rdns: any = req.dn.rdns;\n      for (let i = 0; i < rdns.length; i++) {\n        const rdn = rdns[i];\n        for (let key in rdn.attrs) {\n          if (key === 'o') {\n            req.currentClientId = rdn.attrs.o.value;\n          }\n        }\n      }\n      return next();\n    };\n\n    for (let i = 0; i < clients.length; i++) {\n      const client = clients[i];\n\n      let bindDN: string = `ou=users,o=${client._id},dc=authing,dc=cn`;\n      const SUFFIX: string = `o=${client._id}, ou=users, dc=authing, dc=cn`;\n\n      /*\n        DN = uid=LDAP_BINDING_USER（邮箱或者手机号）,ou=Users,o=AUTHING_CLINET_ID,dc=authing,dc=cn\n        ldapsearch -H ldap://localhost:1389 -x -D \"ou=users,o=59f86b4832eb28071bdd9214,dc=authing,dc=cn\" -LLL -b \"o=59f86b4832eb28071bdd9214,ou=users,dc=authing,dc=cn\" cn=18000179176\n      */\n\n      server.bind(bindDN, function(_req: any, res: any, next: any) {\n        // if (req.dn.toString() !== 'cn=root')\n        //   return next(new ldap.InvalidCredentialsError());\n\n        res.end();\n        return next();\n      });\n\n      const authorize = (_req: any, _res: any, next: any) => {\n        if (!_req.connection.ldap.bindDN.equals(bindDN))\n          return next(new ldap.InsufficientAccessRightsError());\n        return next();\n      };\n\n      const pre: any = [authorize, loadCurrentClientId];\n\n      server.search(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapsearch -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" -LLL -b \"o=5c344f102e450b000170190a,ou=users,dc=authing,dc=cn\" cn=ldap-tester\n\n        const filterKey: any = req.filter.attribute;\n        const filterValue: any = req.filter.value || '*';\n\n        const filterKeyMapping: any = {\n          cn: 'username',\n          gid: '_id',\n          uid: '_id',\n        };\n\n        let queryOptions: any = {\n          registerInClient: ObjectId(req.currentClientId),\n        };\n\n        let users: any;\n        req.users = {};\n\n        if (filterKeyMapping[filterKey]) {\n          const key: any = filterKeyMapping[filterKey];\n          queryOptions[key] =\n            key === '_id' ? ObjectId(filterValue) : filterValue;\n          users = await findUsers(queryOptions);\n\n          const currentUser: any = users[0];\n          const cn: any = currentUser.username;\n          const dn: string = `cn=${cn},uid=${\n            currentUser._id\n          }, ou=users, o=${req.currentClientId}, dc=authing, dc=cn`;\n          currentUser['cn'] = cn;\n          currentUser['gid'] = currentUser._id;\n          currentUser['uid'] = currentUser._id;\n          currentUser['objectclass'] = 'users';\n\n          delete currentUser['__v'];\n          delete currentUser['isDeleted'];\n          delete currentUser['salt'];\n  \n          res.send({\n            dn,\n            attributes: currentUser,\n          });           \n        }else {\n          users = await findUsers(queryOptions);\n          for(var i = 0; i < users.length; i++) {\n            const currentUser: any = users[i];\n            const cn: any = currentUser.username;\n            const dn: string = `cn=${cn},uid=${\n              currentUser._id\n            }, ou=users, o=${req.currentClientId}, dc=authing, dc=cn`;\n            currentUser['cn'] = cn;\n            currentUser['gid'] = currentUser._id;\n            currentUser['uid'] = currentUser._id;\n            currentUser['objectclass'] = 'users';\n            delete currentUser['__v'];\n            delete currentUser['isDeleted'];\n            delete currentUser['salt'];\n\n            req.users[currentUser._id] = {\n              dn,\n              attributes: currentUser,\n            };\n\n            let scopeCheck: any;\n\n            switch (req.scope) {\n            case 'base':\n              if (req.filter.matches(db[dn])) {\n                res.send({\n                  dn: dn,\n                  attributes: db[dn]\n                });\n              }\n          \n              res.end();\n              return next();\n          \n            case 'one':\n              scopeCheck = function(k: any) {\n                if (req.dn.equals(k))\n                  return true;\n          \n                var parent = ldap.parseDN(k).parent();\n                return (parent ? parent.equals(req.dn) : false);\n              };\n              break;\n          \n            case 'sub':\n              scopeCheck = function(k: any) {\n                return (req.dn.equals(k) || req.dn.parentOf(k));\n              };\n          \n              break;\n            }\n\n            Object.keys(req.users).forEach(function(key) {\n              if (!scopeCheck(key))\n                return;\n          \n              if (req.filter.matches(req.users[key])) {\n                res.send(req.users[key]);\n              }\n            });\n\n            // console.log(req.users);\n          }\n        }\n\n        res.end();\n        return next();\n      });\n\n      server.add(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapadd -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" -f ./user.ldif\n        const cn = req.dn.rdns[0].attrs.cn;\n        if (!req.dn.rdns[0].attrs.cn)\n          return next(new ldap.ConstraintViolationError('cn required'));\n\n        const users = await findUsers({\n          registerInClient: ObjectId(req.currentClientId),\n          isDeleted: false,\n          username: cn.value,\n        });\n\n        if (users && users.length > 0) {\n          return next(new ldap.EntryAlreadyExistsError(req.dn.toString()));\n        }\n\n        try {\n          const authing = await new Authing({\n            clientId: req.currentClientId,\n            secret: '03bb8b2fca823137c7dec63fd0029fc2',\n          });\n\n          await authing.register({\n            username: cn.value,\n            nickname: cn.value,\n            unionid: `ldap|${cn.value}`,\n            registerMethod: 'sso:ldap-add',\n          });\n        } catch (error) {\n          return next(new ldap.UnavailableError(error.toString()));\n        }\n\n        res.end();\n        return next();\n      });\n\n      server.del(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapdelete -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" \"cn=ldapjs, o=5c344f102e450b000170190a, ou=users, dc=authing,dc=cn\"\n        const cn = req.dn.rdns[0].attrs.cn;\n        if (!req.dn.rdns[0].attrs.cn)\n          return next(new ldap.NoSuchObjectError(req.dn.toString()));\n\n        const users = await findUsers({\n          registerInClient: ObjectId(req.currentClientId),\n          isDeleted: false,\n          username: cn.value,\n        });\n\n        if (!users || users.length === 0) {\n          return next(new ldap.NoSuchObjectError(req.dn.toString()));\n        }\n\n        try {\n          await removeUser({\n            registerInClient: ObjectId(req.currentClientId),\n            username: cn.value,\n          });\n        } catch (error) {\n          return next(new ldap.UnavailableError(error.toString()));\n        }\n\n        res.end();\n        return next();\n      });\n\n      server.modify(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapmodify -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" -f ./modify.ldif\n        const cn: any = req.dn.rdns[0].attrs.cn;\n        if (!req.dn.rdns[0].attrs.cn)\n          return next(new ldap.NoSuchObjectError(req.dn.toString()));\n\n        if (!req.changes.length)\n          return next(new ldap.ProtocolError('changes required'));\n\n        const users: any = await findUsers({\n          registerInClient: ObjectId(req.currentClientId),\n          isDeleted: false,\n          username: cn.value,\n        });\n\n        if (!users || users.length === 0) {\n          return next(new ldap.NoSuchObjectError(req.dn.toString()));\n        }\n\n        const user: any = users[0];\n\n        let mod: any, authing: any;\n\n        for (var i = 0; i < req.changes.length; i++) {\n          mod = req.changes[i].modification;\n          switch (req.changes[i].operation) {\n            case 'replace':\n              const typeMapping: any = {\n                userpassword: 'password',\n                mail: 'email',\n                cn: ['username'],\n              };\n\n              const notAllowedTypes = ['gid', 'uid', '_id'];\n\n              if (notAllowedTypes.indexOf(mod.type) > -1) {\n                return next(\n                  new ldap.UnwillingToPerformError(\n                    `${mod.type} is not allowed to modify`\n                  )\n                );\n              }\n\n              let fieldModified: any = mod.type;\n\n              if (typeMapping[mod.type]) {\n                fieldModified = typeMapping[mod.type];\n              }\n\n              try {\n                authing =\n                  authing ||\n                  (await new Authing({\n                    clientId: req.currentClientId,\n                    secret: '03bb8b2fca823137c7dec63fd0029fc2',\n                  }));\n\n                if (\n                  fieldModified instanceof String ||\n                  typeof fieldModified === 'string'\n                ) {\n                  let query: any = {\n                    _id: user._id,\n                  };\n                  const field: any = fieldModified;\n                  query[field] = mod.vals[0];\n                  await authing.update(query);\n                } else {\n                  let query: any = {\n                    _id: users[0]._id,\n                  };\n                  for (let i = 0; i < fieldModified.length; i++) {\n                    query[fieldModified[i]] = mod.vals[0];\n                  }\n                  await authing.update(query);\n                }\n              } catch (error) {\n                return next(new ldap.UnavailableError(error.toString()));\n              }\n              break;\n            case 'add':\n              return next(\n                new ldap.UnwillingToPerformError('only replace allowed')\n              );\n            case 'delete':\n              return next(\n                new ldap.UnwillingToPerformError('only replace allowed')\n              );\n          }\n        }\n\n        res.end();\n        return next();\n      });\n    }\n\n    server.listen(1389, function() {\n      console.log('LDAP server up at: %s', server.url);\n    });\n  });\n};\n"],"names":["ldap","require","parseDN","MongoClient","ObjectId","ldapdb","assert","Authing","url","user","password","ip","port","dbname","join","connect","_err","client","equal","console","log","db","createLDAPServer","server","createServer","findUsers","opts","Promise","resolve","reject","collection","find","toArray","err","docs","findClients","callback","clients","isDeleted","removeUser","query","_resolve","_reject","updateOne","$set","then","users","catch","loadCurrentClientId","req","_res","next","currentClientId","rdns","dn","i","length","rdn","key","attrs","o","value","bindDN","_id","SUFFIX","bind","_req","res","end","authorize","connection","equals","InsufficientAccessRightsError","pre","search","filterKey","filter","attribute","filterValue","filterKeyMapping","cn","gid","uid","queryOptions","registerInClient","currentUser","username","send","attributes","scopeCheck","scope","matches","k","parent","parentOf","Object","keys","forEach","add","ConstraintViolationError","EntryAlreadyExistsError","toString","authing","clientId","secret","register","nickname","unionid","registerMethod","error","UnavailableError","del","NoSuchObjectError","modify","changes","ProtocolError","mod","modification","operation","typeMapping","userpassword","mail","notAllowedTypes","indexOf","type","UnwillingToPerformError","fieldModified","String","field","vals","update","listen"],"mappings":"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"}