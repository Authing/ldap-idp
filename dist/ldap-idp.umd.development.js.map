{"version":3,"file":"ldap-idp.umd.development.js","sources":["../src/index.ts"],"sourcesContent":["const ldap = require('ldapjs');\nconst parseDN = require('ldapjs').parseDN;\nconst fs = require('fs');\nconst MongoClient = require('mongodb').MongoClient;\nconst ObjectId = require('mongodb').ObjectId;\nconst ldapdb = require('./ldapdb.json');\n\nconst assert = require('assert');\n\n// Connection URL\nconst url = [\n  'mongodb://',\n  ldapdb.user + ':' + ldapdb.password + '@',\n  ldapdb.ip,\n  ':',\n  ldapdb.port,\n  '/',\n  ldapdb.dbname,\n].join('');\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(_err: any, client: any) {\n  assert.equal(null, _err);\n\n  console.log('Connected successfully to server');\n\n  const db = client.db(ldapdb.dbname);\n  createLDAPServer(db);\n  // client.close();\n});\n\nconst createLDAPServer = (db: any) => {\n  const server: any = ldap.createServer();\n\n  const findUsers: any = function(opts: any) {\n    return new Promise((resolve: any, reject: any) => {\n      const collection = db.collection('users');\n      opts['isDeleted'] = false;\n      collection.find(opts).toArray(function(err: any, docs: any) {\n        if (err) reject(err);\n        resolve(docs);\n      });\n    });\n  };\n\n  const findClients: any = function(callback: any) {\n    const clients = db.collection('userclients');\n    clients\n      .find({\n        isDeleted: false,\n      })\n      .toArray(function(err: any, docs: any) {\n        assert.equal(err, null);\n        callback(docs);\n      });\n  };\n\n  const insertUser = function(opts: any) {\n    return new Promise((resolve: any, reject: any) => {\n      const collection = db.collection('users');\n      // Insert some documents\n      collection.insertMany(opts, (err: any, result: any) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(result);\n      });\n    });\n  }  \n\n  findClients((clients: any) => {\n    const loadCurrentClientId = (req: any, _res: any, next: any) => {\n      req.currentClientId = '';\n      const rdns: any = req.dn.rdns;\n      for (let i = 0; i < rdns.length; i++) {\n        const rdn = rdns[i];\n        for (let key in rdn.attrs) {\n          if (key === 'o') {\n            req.currentClientId = rdn.attrs.o.value;\n          }\n        }\n      }\n      return next();\n    };\n\n    for (let i = 0; i < clients.length; i++) {\n      const client = clients[i];\n\n      let bindDN: string = `ou=users,o=${client._id},dc=authing,dc=cn`;\n      const SUFFIX: string = `o=${client._id}, ou=users, dc=authing, dc=cn`;\n\n      /*\n        DN = uid=LDAP_BINDING_USER（邮箱或者手机号）,ou=Users,o=AUTHING_CLINET_ID,dc=authing,dc=cn\n        ldapsearch -H ldap://localhost:1389 -x -D \"ou=users,o=59f86b4832eb28071bdd9214,dc=authing,dc=cn\" -LLL -b \"o=59f86b4832eb28071bdd9214,ou=users,dc=authing,dc=cn\" cn=18000179176\n      */\n\n      server.bind(bindDN, function(_req: any, res: any, next: any) {\n        // if (req.dn.toString() !== 'cn=root')\n        //   return next(new ldap.InvalidCredentialsError());\n\n        res.end();\n        return next();\n      });\n\n      const authorize = (_req: any, _res: any, next: any) => {\n        if (!_req.connection.ldap.bindDN.equals(bindDN))\n          return next(new ldap.InsufficientAccessRightsError());\n        return next();\n      };\n\n      const pre: any = [authorize, loadCurrentClientId];\n\n      server.search(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapsearch -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" -LLL -b \"o=5c344f102e450b000170190a,ou=users,dc=authing,dc=cn\" cn=ldap-tester\n\n        const filterKey: any = req.filter.attribute;\n        const filterValue: any = req.filter.value;\n\n        const filterKeyMapping: any = {\n          cn: ['username', 'email', 'phone', 'unionid'],\n          gid: ['_id'],\n          uid: ['_id'],\n        };\n\n        let queryOptions: any = {\n          registerInClient: ObjectId(req.currentClientId),\n        };\n\n        if (filterKeyMapping[filterKey]) {\n          const filterMapping: any = filterKeyMapping[filterKey];\n          for (let i = 0; i < filterMapping.length; i++) {\n            const key: string = filterMapping[i];\n            queryOptions[key] =\n              key === '_id' ? ObjectId(filterValue) : filterValue;\n\n            const users: object[] = await findUsers(queryOptions);\n\n            if (users && users.length > 0) {\n              const currentUser: any = users[0];\n              const cn: any =\n                currentUser.username ||\n                currentUser.email ||\n                currentUser.phone ||\n                currentUser.unionid;\n              const dn: string = `cn=${cn},uid=${currentUser._id}, ou=users, o=${\n                req.currentClientId\n              }, dc=authing, dc=cn`;\n              currentUser['cn'] = cn;\n              currentUser['gid'] = currentUser._id;\n              currentUser['uid'] = currentUser._id;\n\n              delete currentUser['__v'];\n              delete currentUser['isDeleted'];\n              delete currentUser['salt'];\n\n              res.send({\n                dn,\n                attributes: currentUser,\n              });\n              break;\n            }\n\n            delete queryOptions[key];\n          }\n        }\n\n        res.end();\n        return next();\n      });\n\n      server.add(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapadd -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" -f ./user.ldif\n        const cn = req.dn.rdns[0].cn;\n        console.log(cn, req.dn.rdns[0]);\n        if (!req.dn.rdns[0].cn)\n          return next(new ldap.ConstraintViolationError('cn required'));\n      \n          // return next(new ldap.EntryAlreadyExistsError(req.dn.toString()));\n\n        await insertUser({\n          username: cn,\n          nickname: cn,\n          unionid: cn,\n          isDeleted: false,\n          isBlocked: false,\n          createdAt: Date.now,\n          updatedAt: Date.now,\n          photo: 'https://usercontents.authing.cn/authing-avatar.png',\n          registerInClient: req.currentClientId,\n          registerMethod: 'sso:ldap-add'\n        });\n\n        res.end();\n        return next();\n      });      \n\n      server.del(SUFFIX, pre, async function(req: any, res: any, next: any) {\n        // ldapdelete -H ldap://localhost:1389 -x -D \"ou=users,o=5c344f102e450b000170190a,dc=authing,dc=cn\" \"o=5c344f102e450b000170190a,ou=users,dc=authing,dc=cn\"\n        console.log(req.dn.rdns[0].cn);\n        if (!req.dn.rdns[0].cn) {\n          return next(new ldap.NoSuchObjectError(req.dn.toString()));\n        }\n\n        // const user = await findUsers({\n\n        // });\n\n\n\n        // !req.users[req.dn.rdns[0].cn]\n  \n            // return next(new ldap.OperationsError(msg));\n      \n        res.end();\n        return next();\n      });\n\n    }\n\n    server.listen(1389, function() {\n      console.log('LDAP server up at: %s', server.url);\n    });\n  });\n};\n"],"names":["ldap","require","parseDN","MongoClient","ObjectId","ldapdb","assert","url","user","password","ip","port","dbname","join","connect","_err","client","equal","console","log","db","createLDAPServer","server","createServer","findUsers","opts","Promise","resolve","reject","collection","find","toArray","err","docs","findClients","callback","clients","isDeleted","insertUser","insertMany","result","loadCurrentClientId","req","_res","next","currentClientId","rdns","dn","i","length","rdn","key","attrs","o","value","bindDN","_id","SUFFIX","bind","_req","res","end","authorize","connection","equals","InsufficientAccessRightsError","pre","search","filterKey","filter","attribute","filterValue","filterKeyMapping","cn","gid","uid","queryOptions","registerInClient","filterMapping","users","currentUser","username","email","phone","unionid","send","attributes","add","ConstraintViolationError","nickname","isBlocked","createdAt","Date","now","updatedAt","photo","registerMethod","del","NoSuchObjectError","toString","listen"],"mappings":";;;;;EAAA,MAAMA,IAAI;EAAA;EAAGC,OAAO,CAAC,QAAD,CAApB;;EACA,MAAMC,OAAO;EAAG;EAAAD,OAAO,CAAC,QAAD,CAAP,CAAkBC,OAAlC;;EAEA,MAAMC,WAAW;EAAG;EAAAF,OAAO,CAAC,SAAD,CAAP,CAAmBE,WAAvC;;EACA,MAAMC,QAAQ;EAAG;EAAAH,OAAO,CAAC,SAAD,CAAP,CAAmBG,QAApC;;EACA,MAAMC,MAAM;EAAA;EAAGJ,OAAO,CAAC,eAAD,CAAtB;;EAEA,MAAMK,MAAM;EAAA;EAAGL,OAAO,CAAC,QAAD,CAAtB;;;EAGA,MAAMM,GAAG;EAAA;EAAG,CACV,YADU,EAEVF,MAAM,CAACG,IAAP,GAAc,GAAd,GAAoBH,MAAM,CAACI,QAA3B,GAAsC,GAF5B,EAGVJ,MAAM,CAACK,EAHG,EAIV,GAJU,EAKVL,MAAM,CAACM,IALG,EAMV,GANU,EAOVN,MAAM,CAACO,MAPG,EAQVC,IARU,CAQL,EARK,CAAZ;;EAWAV,WAAW,CAACW,OAAZ,CAAoBP,GAApB,EAAyB,UAASQ,IAAT,EAAoBC,MAApB;EACvBV,EAAAA,MAAM,CAACW,KAAP,CAAa,IAAb,EAAmBF,IAAnB;EAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;EAEA,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,CAAUf,MAAM,CAACO,MAAjB,CAAX;EACAS,EAAAA,gBAAgB,CAACD,EAAD,CAAhB;EAED,CARD;;EAUA,MAAMC,gBAAgB,GAAID,EAAD;EACvB,QAAME,MAAM,GAAQtB,IAAI,CAACuB,YAAL,EAApB;;EAEA,QAAMC,SAAS,GAAQ,UAASC,IAAT;EACrB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAeC,MAAf;EACjB,YAAMC,UAAU,GAAGT,EAAE,CAACS,UAAH,CAAc,OAAd,CAAnB;EACAJ,MAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoB,KAApB;EACAI,MAAAA,UAAU,CAACC,IAAX,CAAgBL,IAAhB,EAAsBM,OAAtB,CAA8B,UAASC,GAAT,EAAmBC,IAAnB;EAC5B,YAAID,GAAJ,EAASJ,MAAM,CAACI,GAAD,CAAN;EACTL,QAAAA,OAAO,CAACM,IAAD,CAAP;EACD,OAHD;EAID,KAPM,CAAP;EAQD,GATD;;EAWA,QAAMC,WAAW,GAAQ,UAASC,QAAT;EACvB,UAAMC,OAAO,GAAGhB,EAAE,CAACS,UAAH,CAAc,aAAd,CAAhB;EACAO,IAAAA,OAAO,CACJN,IADH,CACQ;EACJO,MAAAA,SAAS,EAAE;EADP,KADR,EAIGN,OAJH,CAIW,UAASC,GAAT,EAAmBC,IAAnB;EACP3B,MAAAA,MAAM,CAACW,KAAP,CAAae,GAAb,EAAkB,IAAlB;EACAG,MAAAA,QAAQ,CAACF,IAAD,CAAR;EACD,KAPH;EAQD,GAVD;;EAYA,QAAMK,UAAU,GAAG,UAASb,IAAT;EACjB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAeC,MAAf;EACjB,YAAMC,UAAU,GAAGT,EAAE,CAACS,UAAH,CAAc,OAAd,CAAnB;;EAEAA,MAAAA,UAAU,CAACU,UAAX,CAAsBd,IAAtB,EAA4B,CAACO,GAAD,EAAWQ,MAAX;EAC1B,YAAIR,GAAJ,EAAS;EACPJ,UAAAA,MAAM,CAACI,GAAD,CAAN;EACD;;EACDL,QAAAA,OAAO,CAACa,MAAD,CAAP;EACD,OALD;EAMD,KATM,CAAP;EAUD,GAXD;;EAaAN,EAAAA,WAAW,CAAEE,OAAD;EACV,UAAMK,mBAAmB,GAAG,CAACC,GAAD,EAAWC,IAAX,EAAsBC,IAAtB;EAC1BF,MAAAA,GAAG,CAACG,eAAJ,GAAsB,EAAtB;EACA,YAAMC,IAAI,GAAQJ,GAAG,CAACK,EAAJ,CAAOD,IAAzB;;EACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EACpC,cAAME,GAAG,GAAGJ,IAAI,CAACE,CAAD,CAAhB;;EACA,aAAK,IAAIG,GAAT,IAAgBD,GAAG,CAACE,KAApB,EAA2B;EACzB,cAAID,GAAG,KAAK,GAAZ,EAAiB;EACfT,YAAAA,GAAG,CAACG,eAAJ,GAAsBK,GAAG,CAACE,KAAJ,CAAUC,CAAV,CAAYC,KAAlC;EACD;EACF;EACF;;EACD,aAAOV,IAAI,EAAX;EACD,KAZD;;EAcA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,OAAO,CAACa,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;EACvC,YAAMhC,MAAM,GAAGoB,OAAO,CAACY,CAAD,CAAtB;EAEA,UAAIO,MAAM,iBAAyBvC,MAAM,CAACwC,sBAA1C;EACA,YAAMC,MAAM,QAAgBzC,MAAM,CAACwC,kCAAnC;EAEA;;;;;EAKAlC,MAAAA,MAAM,CAACoC,IAAP,CAAYH,MAAZ,EAAoB,UAASI,IAAT,EAAoBC,GAApB,EAA8BhB,IAA9B;EAClB;EACA;EAEAgB,QAAAA,GAAG,CAACC,GAAJ;EACA,eAAOjB,IAAI,EAAX;EACD,OAND;;EAQA,YAAMkB,SAAS,GAAG,CAACH,IAAD,EAAYhB,IAAZ,EAAuBC,IAAvB;EAChB,YAAI,CAACe,IAAI,CAACI,UAAL,CAAgB/D,IAAhB,CAAqBuD,MAArB,CAA4BS,MAA5B,CAAmCT,MAAnC,CAAL,EACE,OAAOX,IAAI,CAAC,IAAI5C,IAAI,CAACiE,6BAAT,EAAD,CAAX;EACF,eAAOrB,IAAI,EAAX;EACD,OAJD;;EAMA,YAAMsB,GAAG,GAAQ,CAACJ,SAAD,EAAYrB,mBAAZ,CAAjB;EAEAnB,MAAAA,MAAM,CAAC6C,MAAP,CAAcV,MAAd,EAAsBS,GAAtB,EAA2B,gBAAexB,GAAf,EAAyBkB,GAAzB,EAAmChB,IAAnC;EACzB;EAEA,cAAMwB,SAAS,GAAQ1B,GAAG,CAAC2B,MAAJ,CAAWC,SAAlC;EACA,cAAMC,WAAW,GAAQ7B,GAAG,CAAC2B,MAAJ,CAAWf,KAApC;EAEA,cAAMkB,gBAAgB,GAAQ;EAC5BC,UAAAA,EAAE,EAAE,CAAC,UAAD,EAAa,OAAb,EAAsB,OAAtB,EAA+B,SAA/B,CADwB;EAE5BC,UAAAA,GAAG,EAAE,CAAC,KAAD,CAFuB;EAG5BC,UAAAA,GAAG,EAAE,CAAC,KAAD;EAHuB,SAA9B;EAMA,YAAIC,YAAY,GAAQ;EACtBC,UAAAA,gBAAgB,EAAEzE,QAAQ,CAACsC,GAAG,CAACG,eAAL;EADJ,SAAxB;;EAIA,YAAI2B,gBAAgB,CAACJ,SAAD,CAApB,EAAiC;EAC/B,gBAAMU,aAAa,GAAQN,gBAAgB,CAACJ,SAAD,CAA3C;;EACA,eAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,aAAa,CAAC7B,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;EAC7C,kBAAMG,GAAG,GAAW2B,aAAa,CAAC9B,CAAD,CAAjC;EACA4B,YAAAA,YAAY,CAACzB,GAAD,CAAZ,GACEA,GAAG,KAAK,KAAR,GAAgB/C,QAAQ,CAACmE,WAAD,CAAxB,GAAwCA,WAD1C;EAGA,kBAAMQ,KAAK,GAAa,MAAMvD,SAAS,CAACoD,YAAD,CAAvC;;EAEA,gBAAIG,KAAK,IAAIA,KAAK,CAAC9B,MAAN,GAAe,CAA5B,EAA+B;EAC7B,oBAAM+B,WAAW,GAAQD,KAAK,CAAC,CAAD,CAA9B;EACA,oBAAMN,EAAE,GACNO,WAAW,CAACC,QAAZ,IACAD,WAAW,CAACE,KADZ,IAEAF,WAAW,CAACG,KAFZ,IAGAH,WAAW,CAACI,OAJd;EAKA,oBAAMrC,EAAE,SAAiB0B,UAAUO,WAAW,CAACxB,oBAC7Cd,GAAG,CAACG,oCADN;EAGAmC,cAAAA,WAAW,CAAC,IAAD,CAAX,GAAoBP,EAApB;EACAO,cAAAA,WAAW,CAAC,KAAD,CAAX,GAAqBA,WAAW,CAACxB,GAAjC;EACAwB,cAAAA,WAAW,CAAC,KAAD,CAAX,GAAqBA,WAAW,CAACxB,GAAjC;EAEA,qBAAOwB,WAAW,CAAC,KAAD,CAAlB;EACA,qBAAOA,WAAW,CAAC,WAAD,CAAlB;EACA,qBAAOA,WAAW,CAAC,MAAD,CAAlB;EAEApB,cAAAA,GAAG,CAACyB,IAAJ,CAAS;EACPtC,gBAAAA,EADO;EAEPuC,gBAAAA,UAAU,EAAEN;EAFL,eAAT;EAIA;EACD;;EAED,mBAAOJ,YAAY,CAACzB,GAAD,CAAnB;EACD;EACF;;EAEDS,QAAAA,GAAG,CAACC,GAAJ;EACA,eAAOjB,IAAI,EAAX;EACD,OAxDD;EA0DAtB,MAAAA,MAAM,CAACiE,GAAP,CAAW9B,MAAX,EAAmBS,GAAnB,EAAwB,gBAAexB,GAAf,EAAyBkB,GAAzB,EAAmChB,IAAnC;EACtB;EACA,cAAM6B,EAAE,GAAG/B,GAAG,CAACK,EAAJ,CAAOD,IAAP,CAAY,CAAZ,EAAe2B,EAA1B;EACAvD,QAAAA,OAAO,CAACC,GAAR,CAAYsD,EAAZ,EAAgB/B,GAAG,CAACK,EAAJ,CAAOD,IAAP,CAAY,CAAZ,CAAhB;EACA,YAAI,CAACJ,GAAG,CAACK,EAAJ,CAAOD,IAAP,CAAY,CAAZ,EAAe2B,EAApB,EACE,OAAO7B,IAAI,CAAC,IAAI5C,IAAI,CAACwF,wBAAT,CAAkC,aAAlC,CAAD,CAAX;;EAIF,cAAMlD,UAAU,CAAC;EACf2C,UAAAA,QAAQ,EAAER,EADK;EAEfgB,UAAAA,QAAQ,EAAEhB,EAFK;EAGfW,UAAAA,OAAO,EAAEX,EAHM;EAIfpC,UAAAA,SAAS,EAAE,KAJI;EAKfqD,UAAAA,SAAS,EAAE,KALI;EAMfC,UAAAA,SAAS,EAAEC,IAAI,CAACC,GAND;EAOfC,UAAAA,SAAS,EAAEF,IAAI,CAACC,GAPD;EAQfE,UAAAA,KAAK,EAAE,oDARQ;EASflB,UAAAA,gBAAgB,EAAEnC,GAAG,CAACG,eATP;EAUfmD,UAAAA,cAAc,EAAE;EAVD,SAAD,CAAhB;EAaApC,QAAAA,GAAG,CAACC,GAAJ;EACA,eAAOjB,IAAI,EAAX;EACD,OAxBD;EA0BAtB,MAAAA,MAAM,CAAC2E,GAAP,CAAWxC,MAAX,EAAmBS,GAAnB,EAAwB,gBAAexB,GAAf,EAAyBkB,GAAzB,EAAmChB,IAAnC;EACtB;EACA1B,QAAAA,OAAO,CAACC,GAAR,CAAYuB,GAAG,CAACK,EAAJ,CAAOD,IAAP,CAAY,CAAZ,EAAe2B,EAA3B;;EACA,YAAI,CAAC/B,GAAG,CAACK,EAAJ,CAAOD,IAAP,CAAY,CAAZ,EAAe2B,EAApB,EAAwB;EACtB,iBAAO7B,IAAI,CAAC,IAAI5C,IAAI,CAACkG,iBAAT,CAA2BxD,GAAG,CAACK,EAAJ,CAAOoD,QAAP,EAA3B,CAAD,CAAX;EACD;EAID;EAIA;EAEI;;;EAEJvC,QAAAA,GAAG,CAACC,GAAJ;EACA,eAAOjB,IAAI,EAAX;EACD,OAnBD;EAqBD;;EAEDtB,IAAAA,MAAM,CAAC8E,MAAP,CAAc,IAAd,EAAoB;EAClBlF,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCG,MAAM,CAACf,GAA5C;EACD,KAFD;EAGD,GAxJU,CAAX;EAyJD,CAhMD;;;;"}