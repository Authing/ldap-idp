{"version":3,"file":"ldap-idp.umd.production.js","sources":["../src/index.ts"],"sourcesContent":["const ldap = require('ldapjs');\nconst MongoClient = require('mongodb').MongoClient;\nconst ldapdb = require('./ldapdb.json');\n\nconst assert = require('assert');\n\n// Connection URL\nconst url = [\n  'mongodb://',\n  ldapdb.user + ':' + ldapdb.password + '@',\n  ldapdb.ip,\n  ':',\n  ldapdb.port,\n  '/',\n  ldapdb.dbname,\n].join('');\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(_err: any, client: any) {\n  assert.equal(null, _err);\n  console.log(\"Connected successfully to server\");\n\n  // const insertDocuments = function(db, callback) {\n  //   // Get the documents collection\n  //   const collection = db.collection('documents');\n  //   // Insert some documents\n  //   collection.insertMany([\n  //     {a : 1}, {a : 2}, {a : 3}\n  //   ], function(err, result) {\n  //     assert.equal(err, null);\n  //     assert.equal(3, result.result.n);\n  //     assert.equal(3, result.ops.length);\n  //     console.log(\"Inserted 3 documents into the collection\");\n  //     callback(result);\n  //   });\n  // }\n\n  const findDocuments = function(db: any, callback: any) {\n    const collection = db.collection('users');\n    collection.find({}).toArray(function(err: any, docs: any) {\n      assert.equal(err, null);\n      callback(docs);\n    });\n  }  \n\n  const db = client.db(ldapdb.dbname);\n  \n  findDocuments(db, (users: any) => {\n    console.log(users);\n  });\n\n  client.close();\n});\n\n///--- Shared handlers\n\nfunction authorize(req: { connection: { ldap: { bindDN: { equals: (arg0: string) => string; }; }; }; }, _res: any, next: { (arg0: any): void; (): void; }) {\n  /* Any user may search after bind, only cn=root has full power */\n  var isSearch = (req instanceof ldap.SearchRequest);\n  if (!req.connection.ldap.bindDN.equals('cn=root') && !isSearch)\n    return next(new ldap.InsufficientAccessRightsError());\n\n  return next();\n}\n\n///--- Globals\n\nvar SUFFIX: string = 'o=joyent';\nvar db: any = {};\nvar server: any = ldap.createServer();\n\nserver.bind('cn=root', function(req: any, res: any, next: any) {\n  if (req.dn.toString() !== 'cn=root' || req.credentials !== 'secret')\n    return next(new ldap.InvalidCredentialsError());\n\n  res.end();\n  return next();\n});\n\nserver.add(SUFFIX, authorize, function(req: { dn: { toString: () => string; }; toObject: () => { attributes: any; }; }, res: { end: () => void; }, next: { (arg0: any): void; (): void; }) {\n  var dn = req.dn.toString();\n\n  if (db[dn])\n    return next(new ldap.EntryAlreadyExistsError(dn));\n\n  db[dn] = req.toObject().attributes;\n  res.end();\n  return next();\n});\n\nserver.bind(SUFFIX, function(req: { dn: { toString: () => string; }; credentials: any; }, res: { end: () => void; }, next: { (arg0: any): void; (arg0: any): void; (arg0: any): void; (): void; }) {\n  var dn = req.dn.toString();\n  if (!db[dn])\n    return next(new ldap.NoSuchObjectError(dn));\n\n  if (!db[dn].userpassword)\n    return next(new ldap.NoSuchAttributeError('userPassword'));\n\n  if (db[dn].userpassword.indexOf(req.credentials) === -1)\n    return next(new ldap.InvalidCredentialsError());\n\n  res.end();\n  return next();\n});\n\nserver.compare(SUFFIX, authorize, function(req: { dn: { toString: () => string; }; attribute: string | number; value: any; }, res: { end: (arg0: boolean) => void; }, next: { (arg0: any): void; (arg0: any): void; (): void; }) {\n  var dn = req.dn.toString();\n  if (!db[dn])\n    return next(new ldap.NoSuchObjectError(dn));\n\n  if (!db[dn][req.attribute])\n    return next(new ldap.NoSuchAttributeError(req.attribute));\n\n  var matches = false;\n  var vals = db[dn][req.attribute];\n  for (var i = 0; i < vals.length; i++) {\n    if (vals[i] === req.value) {\n      matches = true;\n      break;\n    }\n  }\n\n  res.end(matches);\n  return next();\n});\n\nserver.del(SUFFIX, authorize, function(req: { dn: { toString: () => string; }; }, res: { end: () => void; }, next: { (arg0: any): void; (): void; }) {\n  var dn = req.dn.toString();\n  if (!db[dn])\n    return next(new ldap.NoSuchObjectError(dn));\n\n  delete db[dn];\n\n  res.end();\n  return next();\n});\n\nserver.modify(SUFFIX, authorize, function(req: { dn: { toString: () => string; }; changes: { operation: any, modification: any; }[]; }, res: { end: () => void; }, next: { (arg0: any): void; (arg0: any): void; (arg0: any): void; (arg0: any): void; (): void; }) {\n  const dn = req.dn.toString();\n  let mod: any = null;\n  if (!req.changes.length)\n    return next(new ldap.ProtocolError('changes required'));\n  if (!db[dn])\n    return next(new ldap.NoSuchObjectError(dn));\n\n  var entry = db[dn];\n\n  for (var i = 0; i < req.changes.length; i++) {\n    mod = req.changes[i].modification;\n    switch (req.changes[i].operation) {\n    case 'replace':\n      if (!entry[mod.type])\n        return next(new ldap.NoSuchAttributeError(mod.type));\n\n      if (!mod.vals || !mod.vals.length) {\n        delete entry[mod.type];\n      } else {\n        entry[mod.type] = mod.vals;\n      }\n\n      break;\n\n    case 'add':\n      if (!entry[mod.type]) {\n        entry[mod.type] = mod.vals;\n      } else {\n        mod.vals.forEach(function(v: any) {\n          if (entry[mod.type].indexOf(v) === -1)\n            entry[mod.type].push(v);\n        });\n      }\n\n      break;\n\n    case 'delete':\n      if (!entry[mod.type])\n        return next(new ldap.NoSuchAttributeError(mod.type));\n\n      delete entry[mod.type];\n\n      break;\n    }\n  }\n\n  res.end();\n  return next();\n});\n\nserver.search(SUFFIX, authorize, function(req: { dn: { toString: () => string; equals: { (arg0: any): boolean; (arg0: any): boolean; }; parentOf: (arg0: any) => void; }; scope: any; filter: { matches: { (arg0: any): boolean; (arg0: any): boolean; }; }; }, res: { send: { (arg0: { dn: any; attributes: any; }): void; (arg0: { dn: string; attributes: any; }): void; }; end: { (): void; (): void; }; }, next: { (arg0: any): void; (): void; (): void; }) {\n  var dn = req.dn.toString();\n  if (!db[dn])\n    return next(new ldap.NoSuchObjectError(dn));\n\n  var scopeCheck: { (k: any): any; (k: any): any; (arg0: string): void; };\n\n  switch (req.scope) {\n  case 'base':\n    if (req.filter.matches(db[dn])) {\n      res.send({\n        dn: dn,\n        attributes: db[dn]\n      });\n    }\n\n    res.end();\n    return next();\n\n  case 'one':\n    scopeCheck = function(k: any) {\n      if (req.dn.equals(k))\n        return true;\n\n      var parent = ldap.parseDN(k).parent();\n      return (parent ? parent.equals(req.dn) : false);\n    };\n    break;\n\n  case 'sub':\n    scopeCheck = function(k: any) {\n      return (req.dn.equals(k) || req.dn.parentOf(k));\n    };\n\n    break;\n  }\n\n  Object.keys(db).forEach(function(key) {\n    if (!scopeCheck(key))\n      return;\n\n    if (req.filter.matches(db[key])) {\n      res.send({\n        dn: key,\n        attributes: db[key]\n      });\n    }\n  });\n\n  res.end();\n  return next();\n});\n\n///--- Fire it up\n\nserver.listen(1389, function() {\n  console.log('LDAP server up at: %s', server.url);\n});"],"names":["ldap","require","MongoClient","ldapdb","assert","url","user","password","ip","port","dbname","join","authorize","req","_res","next","isSearch","SearchRequest","connection","bindDN","equals","InsufficientAccessRightsError","connect","_err","client","equal","console","log","db","callback","collection","find","toArray","err","docs","findDocuments","users","close","SUFFIX","server","createServer","bind","res","dn","toString","credentials","InvalidCredentialsError","end","add","EntryAlreadyExistsError","toObject","attributes","userpassword","indexOf","NoSuchAttributeError","NoSuchObjectError","compare","attribute","matches","vals","i","length","value","del","modify","mod","changes","ProtocolError","entry","modification","operation","type","forEach","v","push","search","scopeCheck","scope","filter","send","k","parent","parseDN","parentOf","Object","keys","key","listen"],"mappings":"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"}